@page "/dashboard"
@page "/dashboard/create"
@page "/dashboard/edit"
@layout AdminLayout
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient


@if (currentUrl.EndsWith("/dashboard"))
{
    <h3>Dashboard</h3>
    <NavLink href="dashboard/create" class="btn btn-info my-3">Crea Foto</NavLink>
}
else if (currentUrl.Contains("/dashboard/create"))
{
    <h3>create</h3>

    <EditForm FormName="FotoForm" Model="@Foto" OnValidSubmit="@SubmitForm">
        <div class="form-group">
            <label for="Name">Name:</label>
            <input id="Name" @bind="Foto.Name" class="form-control" />
        </div>

        <div class="form-group">
            <label for="Description">Description:</label>
            <input id="Description" @bind="Foto.Description" class="form-control" />
        </div>


        <button type="submit" class="btn btn-primary">Salva</button>
    </EditForm>

}


else if (currentUrl.Contains("/dashboard/edit"))
{
    <h3>edit</h3>
}


@code {
    private string? currentUrl;
    private string? previewImage;
    private string? baseUrl;
    public Foto? Foto;


    protected override async Task OnInitializedAsync()
    {
        Foto = new Foto();
        currentUrl = NavigationManager.Uri;
    }

    private async Task SubmitForm()
    {
        baseUrl = Configuration["ApiSettings:BaseUrl"];
        string apiUrl = $"{baseUrl}createfoto";

        Console.WriteLine($"Sending data: Name={Foto?.Name}, Description={Foto?.Description}");

        try
        {
            var response = await HttpClient.PostAsJsonAsync(apiUrl, Foto);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Successfully submitted the form.");
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception: {ex.Message}");
        }
    }

}
